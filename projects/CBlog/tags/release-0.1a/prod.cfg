[global]
# This is where all of your settings go for your production environment.
# You'll copy this file over to your production server and provide it
# as a command-line option to your start script.
# Settings that are the same for both development and production
# (such as template engine, encodings, etc.) all go in
# cblog/config/app.cfg
server.socket_host = "127.0.0.1"
server.socket_port = 8081

# override some global settings
# !Please change title and description for your own blog!
cblog.title = 'The Life of my Brain'
cblog.description = 'Where Pythons wrestle with Bugs'
cblog.author = 'Christopher Arndt'

# DATABASE

sqlobject.dburi="sqlite://%(current_dir_uri)s/data/proddata.sqlite"

# SERVER

server.environment="production"

# Sets the number of threads the server uses
# server.thread_pool = 1

# if this is part of a larger site, you can set the path
# to the TurboGears instance here
# server.webpath=""

# Set to True if you'd like to abort execution if a controller gets an
# unexpected parameter. False by default
# tg.strict_parameters = False

# Caching
[/]
expiresFilter.on = True
expiresFilter.seconds = 300

[/logout]
expiresFilter.on = False

[/login]
expiresFilter.on = False

# LOGGING
# Logging configuration generally follows the style of the standard
# Python logging module configuration. Note that when specifying
# log format messages, you need to use *() for formatting variables.
# Deployment independent log configuration is in cblog/config/log.cfg
[logging]

[[handlers]]

[[[access_out]]]
# set the filename as the first argument below
args="('log/server.log',)"
class='FileHandler'
level='INFO'
formatter='message_only'

[[loggers]]
[[[cblog]]]
level='ERROR'
qualname='cblog'
handlers=['error_out']

[[[access]]]
level='INFO'
qualname='turbogears.access'
handlers=['access_out']
propagate=0
